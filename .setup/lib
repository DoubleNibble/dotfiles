#!/usr/bin/env bash

mt_setup_dir="$1"

mt_color_start="\033[1;34m"
mt_color_end="\033[0m"

echo -e "${mt_color_start}Loading required assets...${mt_color_end}"

# Function to log text
mt_log () {
    echo -e "${mt_color_start}$1${mt_color_end}"
}

# Function to prompt for a value
mt_prompt () {
    mt_log "$1"
    read -p "> " $2
}

# Function to prompt for a character
mt_prompt_for_character () {
    mt_log "$1"
    read -n1 -r -p "> " $2
    echo ""
}

# Function to pause for a keypress
mt_pause () {
    mt_prompt_for_character "$1" mt_temp
}

# Function to prompt for a confirmation
mt_confirm () {
    mt_prompt_for_character "$1 (y/n) " mt_temp

    if [ "$mt_temp" == "y" ] || [ "$mt_temp" == "Y" ]; then
        $2
    else
        if [ "$3" ]; then
            mt_log "$3"
        fi
    fi
}

# Function to load a script after a confirmation
mt_confirm_and_source () {
    mt_prompt_for_character "$1 (y/n) " mt_temp

    if [ "$mt_temp" == "y" ] || [ "$mt_temp" == "Y" ]; then
        . $2
    else
        if [ "$3" ]; then
            mt_log "$3"
        fi
    fi
}

# Function to load a script after a confirmation else the other
mt_confirm_and_source_else () {
    mt_prompt_for_character "$1 (y/n) " mt_temp

    if [ "$mt_temp" == "y" ] || [ "$mt_temp" == "Y" ]; then
        . $2
    else
        . $3
    fi
}

# Function to abort with exit-code 0
mt_abort () {
    mt_log "Aborting..."
    exit 0
}

# Function to abort setup for an arbitary reason
mt_abort_setup () {
    mt_log "$1"
    mt_abort
}

# Function to abort setup for an unknown Linux
mt_abort_setup_for () {
    mt_log "\nFound $1 Linux for which no configuration is created yet."
    mt_abort
}

mt_log "All required assets loaded"
